
# COVID-19 Testing and Vaccination Coverage Analysis in India: A State-wise Study

**Team Members**

[Student Name 1] (GitHub: @username1) 

[Student Name 2] (GitHub: @username2) 

<br>

#### _Research Question: Did states with more comprehensive testing efforts achieve faster vaccination coverage during India's COVID-19 response?_

<br>

##### Data Sources

We utilized three primary datasets:

1. COVID-19 vaccination data (state-wise)
2. Testing details by state
3. State population projections for 2020

<br>

```{python}
import pandas as pd
import datetime as dt
import altair as alt
import statsmodels as sm
from statsmodels.formula.api import ols
import matplotlib.pyplot as plt
```

<br>

## 1. Data cleaning

```{python}

# Load datasets
covid_vacc = pd.read_csv('C:/Users/Shreya Work/OneDrive/Documents/GitHub/python2_final_project/data/covid_vaccine_statewise.csv')
covid_test = pd.read_csv('C:/Users/Shreya Work/OneDrive/Documents/GitHub/python2_final_project/data/StatewiseTestingDetails.csv')
population = pd.read_csv('C:/Users/Shreya Work/OneDrive/Documents/GitHub/python2_final_project/data/state_population.csv')

# Convert dates to datetime
covid_vacc['Date'] = pd.to_datetime(covid_vacc['Updated On'], format='%d/%m/%Y')
covid_test['Date'] = pd.to_datetime(covid_test['Date'])

# Filter data for 2021 (January to June)
covid_vacc = covid_vacc[(covid_vacc['Date'] > '2020-12-31') & (covid_vacc['Date'] <= '2021-06-30')]
covid_test = covid_test[(covid_test['Date'] > '2020-12-31') & (covid_test['Date'] <= '2021-06-30')]

# Aggregate data to monthly level
covid_vacc['Month'] = covid_vacc['Date'].dt.to_period('M')
covid_test['Month'] = covid_test['Date'].dt.to_period('M')

# Use last day of month value for cumulative metrics
covid_vacc_monthly = covid_vacc.sort_values('Date').groupby(['State', 'Month'])['Total Individuals Vaccinated'].last().reset_index()
covid_test_monthly = covid_test.sort_values('Date').groupby(['State', 'Month'])['TotalSamples'].last().reset_index()

# Merge datasets
covid_merged = pd.merge(covid_vacc_monthly, covid_test_monthly, on=['State', 'Month'], how='inner')
covid_merged = pd.merge(covid_merged, population, on='State', how='left')

# Calculate testing and vaccination rates
covid_merged['testing_rate'] = covid_merged['TotalSamples'] / covid_merged['Projected Total Population'] * 100000
covid_merged['vaccination_rate'] = covid_merged['Total Individuals Vaccinated'] / covid_merged['Projected Total Population'] * 100

# Save the merged dataset
covid_merged.to_csv('C:/Users/Shreya Work/OneDrive/Documents/GitHub/python2_final_project/data/covid_final_copy.csv', index=False)

print(covid_merged.head())
print(f"Number of unique states: {covid_merged['State'].nunique()}")

```

<br>

## 2. Exploring the data

### Testing Rate and Vaccination Rate Progression


```{python}
alt.data_transformers.disable_max_rows()

# testing rate

import matplotlib.pyplot as plt

plt.figure(figsize=(12, 6))
plt.boxplot([covid_merged[covid_merged['State'] == state]['testing_rate'] for state in covid_merged['State'].unique()],
            labels=covid_merged['State'].unique())
plt.title('Distribution of Testing Rates by State')
plt.xlabel('State')
plt.ylabel('Testing Rate per 100,000 population')
plt.xticks(rotation=90)
plt.grid(axis='y')
plt.tight_layout()
plt.show()



# vaccination progression
plt.figure(figsize=(12, 6))
for state in covid_merged['State'].unique():
    state_data = covid_merged[covid_merged['State'] == state]
    plt.plot(state_data['Month'].astype(str), state_data['vaccination_rate'], label=state)

plt.title('Vaccination Progress by State Over Time')
plt.xlabel('Month')
plt.ylabel('Vaccination Rate (%)')
plt.legend(title='State', bbox_to_anchor=(1.05, 1), loc='upper left')
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

```


### Distribution of Testing Rate

```{python}
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns


# Part A: Overall pattern (combined across all states)
plt.figure(figsize=(12, 6))
plt.hist(covid_merged['testing_rate'], bins=30, edgecolor='black', alpha=0.7)
plt.title('Overall Distribution of Testing Rates Across All States')
plt.xlabel('Testing Rate per 100,000 population')
plt.ylabel('Frequency')
plt.grid(True, alpha=0.3)
plt.tight_layout()
plt.show()

# Part B: State-wise distribution (grouped into bins)
# Calculate mean testing rate for each state
state_testing = covid_merged.groupby('State')['testing_rate'].mean().reset_index()

# Create testing rate bins
bins = [0, 20000, 40000, 60000, 80000, 100000, float('inf')]
labels = ['0-20k', '20k-40k', '40k-60k', '60k-80k', '80k-100k', '100k+']

# Assign states to bins
state_testing['rate_category'] = pd.cut(state_testing['testing_rate'], 
                                      bins=bins, labels=labels)

# Sort states by testing rate
state_testing = state_testing.sort_values('testing_rate', ascending=False)

# Create visualization for state-wise distribution
plt.figure(figsize=(12, 6))
plt.hist(state_testing['testing_rate'], bins=6, edgecolor='black', alpha=0.7)
plt.title('Distribution of State-wise Average Testing Rates')
plt.xlabel('Testing Rate per 100,000 population')
plt.ylabel('Number of States')
plt.grid(True, alpha=0.3)
plt.tight_layout()
plt.show()

# Print state categorization
print("\nState-wise Testing Rate Categories:")
print(state_testing[['State', 'testing_rate', 'rate_category']].to_string())

# Optional: Create a bar plot showing testing rates by state
plt.figure(figsize=(15, 8))
sns.barplot(data=state_testing, x='State', y='testing_rate')
plt.xticks(rotation=90)
plt.title('Average Testing Rates by State')
plt.xlabel('State')
plt.ylabel('Testing Rate per 100,000 population')
plt.tight_layout()
plt.show()
```

<br>

## 3. Relationship between vaccination and testing

```{python}
plt.figure(figsize=(10, 6))

for state in covid_merged['State'].unique():
    state_data = covid_merged[covid_merged['State'] == state]
    plt.scatter(state_data['testing_rate'], state_data['vaccination_rate'], label=state)

plt.title('Testing Rate vs Vaccination Rate')
plt.xlabel('Testing Rate per 100,000 population')
plt.ylabel('Vaccination Rate (%)')
plt.legend(title='State', bbox_to_anchor=(1.05, 1), loc='upper left')
plt.grid(True)
plt.tight_layout()
plt.show()

```

<br>

## 4. Correlation and regression analysis

```{python}
from statsmodels.formula.api import ols

# Correlation analysis
correlation = covid_merged[['testing_rate', 'vaccination_rate']].corr().iloc[0, 1]
print(f"Correlation between testing rate and vaccination rate: {correlation:.2f}")

# Regression analysis
model = ols('vaccination_rate ~ testing_rate', data=covid_merged).fit()
print(model.summary())

```

<br>

### Correlation Analysis
The correlation coefficient of 0.61 indicates a moderately strong positive relationship between testing and vaccination rates. This suggests that states with higher testing rates generally tend to have higher vaccination rates.


#### Regression Analysis Key Findings

##### Model Fit

- R-squared value of 0.373 indicates that approximately 37.3% of the variation in vaccination rates can be explained by testing rates

- The adjusted R-squared (0.370) is very close to the R-squared, suggesting the model is not overfitted

##### Statistical Significance

- F-statistic of 122.6 with a p-value of 1.17e-22 indicates the model is highly statistically significant

- The testing_rate coefficient (0.0002) is significant (p < 0.001), confirming a positive relationship with vaccination rates

##### Coefficient Interpretation

- Intercept of 2.7051: The expected vaccination rate when testing rate is zero

- Testing_rate coefficient of 0.0002: For each unit increase in testing rate per 100,000 population, the vaccination rate increases by 0.0002 percentage points

<br>

## 5. Shiny app dashboard

Insert some screenshots of dashboard

<br>
<br>

## 6. Analysis 

Based on the comprehensive data analysis of COVID-19 testing and vaccination rates across Indian states from January to August 2021, several significant patterns and insights emerge:

<br>
---

### Testing Distribution Analysis

#### High Testing States: 

- Ladakh and Lakshadweep show exceptionally high testing rates (>150,000 per 100,000 population), though this is partly due to their small population base.
- Metropolitan Regions: Delhi maintains consistently high testing rates (>100,000 per 100,000), reflecting urban capacity and infrastructure.
- State Variations: Most states maintain testing rates between 20,000-60,000 per 100,000 population, showing significant interstate disparities.

<br>
---

### Vaccination Progress Patterns

#### Leading States:

- Ladakh achieved nearly 58% vaccination rate by June 2021
- Lakshadweep reached 62% vaccination coverage
- Sikkim managed about 50% coverage

#### Major States Performance:
- Kerala maintained steady progress, reaching 28% by June
- Maharashtra, despite high case loads, achieved 19.5% coverage
- Uttar Pradesh, India's most populous state, reached 10.4% coverage

<br>
---

### State-wise overall performance

#### High-Performing Large States


##### Maharashtra
- Despite having India's second-largest population (123.1 million), achieved impressive vaccination coverage
- Reached 19.5% vaccination rate by June 2021
- Maintained consistent testing rates around 33,800 per 100,000 population
- Success factors: Strong healthcare infrastructure and urban centers with good medical facilities1

##### Karnataka
- Population of 67.5 million
- Achieved 25.9% vaccination rate by June 2021
- Maintained high testing rates (50,700 per 100,000)
- Key advantage: Tech hub Bangalore's infrastructure and private sector participation

#### Underperforming States


##### Bihar
- Large population (124.8 million) but low vaccination rate of 10.5% by June 2021
- Testing rates remained low at 26,600 per 100,000
- Challenges: Limited healthcare infrastructure and large rural population

##### Uttar Pradesh
- India's most populous state (237.8 million)
- Lowest vaccination rate among major states at 10.4% by June 2021
- Testing rates remained consistently low (24,300 per 100,000)
- Hindrances: Vast geographical area and inadequate healthcare facilities


#### Key Factors for Success

##### Healthcare Infrastructure

- States with established medical facilities showed better performance
- Urban centers with multiple vaccination sites performed better3

##### Population Size Impact

- Smaller states like Ladakh (57.9%) and Lakshadweep (62.6%) achieved higher vaccination rates
- Large states required more complex logistics and distribution networks3

<br>
---

### Correlation Between Testing and Vaccination

Several patterns emerge from the data:

- *Positive Correlation:* States with robust testing infrastructure generally achieved higher vaccination rates
- *Small vs Large States:* Smaller states/UTs showed faster vaccination progress, possibly due to manageable population sizes
- *Resource Utilization:* States that established strong testing systems early (like Delhi, Kerala) maintained efficient vaccination programs

<br>
---

### Project Significance
This analysis is significant for several reasons:


#### Policy Implications

- Demonstrates the importance of healthcare infrastructure in pandemic response
- Highlights the need for targeted support to states with lower testing capabilities
- Shows how early testing capacity correlates with vaccination efficiency


#### Healthcare Planning

- Provides insights for future pandemic preparedness
- Identifies successful models from high-performing states
- Reveals the importance of population size in healthcare delivery


#### Resource Allocation

- Helps understand how testing infrastructure impacts vaccination programs
- Identifies states needing additional support
- Shows the effectiveness of different state-level approaches


#### Public Health Strategy

- Demonstrates the value of comprehensive testing programs
- Shows how early infrastructure investment impacts long-term outcomes
- Highlights the importance of coordinated healthcare responses

<br>
---

**This project reveals critical insights into India's COVID-19 response, showing how testing infrastructure and vaccination programs worked together in the nation's largest public health initiative.**


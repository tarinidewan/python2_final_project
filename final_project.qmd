---
title: "COVID-19 Testing and Vaccination Coverage Analysis in India"
output:
  pdf_document:
    number_sections: true
fontsize: 12pt
geometry: a4paper
classoption: oneside
---
Shreya Shravini (Section 3; @shreyashravini), Tarini Dewan (Section 1; @tarinidewan)

December 7, 2024

<br>

##### _Research Question: Did states with more comprehensive testing efforts achieve faster vaccination coverage during India's COVID-19 response?_

The COVID-19 pandemic tested healthcare systems worldwide, with countries racing to both test and vaccinate their populations. Our analysis examines how testing capacity affected vaccination rates across Indian states from January to August 2021, while considering factors like healthcare systems and socioeconomic differences.

The motivation to study this question comes from the need to make better choices about where to put resources during public health emergencies. If states with good testing programs gave out vaccines faster, infrastructure is likely the key barrier in underperforming states - since successful programs indicate they already have trained staff, data systems, and coordinated healthcare networks in place.

On the other hand, if states with strong testing still struggled with vaccination, public awareness is likely the barrier. Given that vaccine confidence in India is [generally high,](https://www.vaccineconfidence.org/vci/country/in/#classDfn) the challenge lies in reaching underserved communities and ensuring access to health information, particularly in areas with lower literacy rates.

The answer also matters because testing centers can help build a culture of preventive healthcare. When people have good experiences with healthcare facilities, they're more likely to engage with the system proactively rather than only seeking care when sick, which could shape future public health programs.

<br>

##### Data Sources and Cleaning

Our analysis draws from multiple data sources across India. For vaccination and testing data, we use daily state-level records from covid19india.org covering 2021. This includes daily vaccination numbers (both first and second doses) and testing samples for each state. We complement this with state population projections from UIDAI (2020), hospital counts from the Ministry of Health (2018) as a measure of healthcare infrastructure, and state-wise Human Development Index data from UNDP Global Lab (2022).

Our data preparation involved several steps. First, we noticed that the vaccination and testing numbers in our raw data were cumulative daily totals - each day's number was monotonically increasing. To get actual daily numbers, we created a lag variable that captured the previous day's total for each state, then subtracted this lagged value to find the marginal increase in tests or vaccines. We identified instances where the calculated daily rates were negative - a data quality concern since daily testing and vaccination numbers should either increase or remain constant. We removed these observations from our analysis. In the testing data, we found inconsistencies where the components (positive and negative tests) were sometimes missing or, when available, didn't sum to the reported total tests. However, since our analysis uses only the total test numbers, these inconsistencies don't affect our findings.

Since India's vaccination program started in 2021, we limited our testing data to match this timeframe. This gave us eight months of data (January to August 2021) to analyze.  After aggregating daily data to monthly totals and combining our datasets, we covered 35 out of India's 36 states and union territories, missing only Dadra and Nagar Haveli and Daman and Diu - a gap that shouldn't significantly impact our findings given its small population.

While merging our combined vaccination-testing dataset with population, hospital, and HDI data, we lost data for Ladakh due to missing hospital and HDI data, bringing our final analysis to 34 states and territories. We calculated per-capita testing and vaccination rates using population data. While testing and vaccination rates vary by month, variables like population, hospitals per capita, and HDI were only available at a single point in time. This is acceptable since these are structural characteristics that don't change significantly over our eight-month study period.

For our exploratory analysis, we categorized states by HDI scores (using UNDP's "high" and "medium" classifications, plus a "low" category for states below the country's average) and by hospitals per capita (divided into three equal quantiles using pandas' qcut). While this basic binning approach has limitations, it provides a useful starting point for pattern analysis.

```{python}
#| include: false
import pandas as pd
import datetime as dt
import altair as alt
import statsmodels as sm
from statsmodels.formula.api import ols
import matplotlib.pyplot as plt
import numpy as np
alt.renderers.enable("png", ppi=250)
```

```{python}
#| include: false
# load datasets
covid_vacc = pd.read_csv('data/covid_vaccine_statewise.csv') # MODIFY PATH ACCORDINGLY
covid_test = pd.read_csv('data/StatewiseTestingDetails.csv') # MODIFY PATH ACCORDINGLY
population = pd.read_csv('data/state_population.csv') # MODIFY PATH ACCORDINGLY

# convert dates to datetime
covid_vacc['Date'] = pd.to_datetime(covid_vacc['Updated On'], format='%d/%m/%Y')
covid_test['Date'] = pd.to_datetime(covid_test['Date'], format='mixed')

# find number of missing values in each column
print('covid_vacc missing rates')
for col in covid_vacc.columns:
    missing_rate = round(100*(covid_vacc[col].isna().sum())/len(covid_vacc), 2)
    print(col, ': ', missing_rate) # variable of interest = Total Doses Administered

# rename Total Doses Administered variable
covid_vacc = covid_vacc.rename(columns={'Total Doses Administered': 'total_doses'})

# drop missing values in total doses
covid_vacc = covid_vacc[~covid_vacc['total_doses'].isna()]

# sort values by state and date
covid_vacc = covid_vacc.sort_values(['State', 'Date'])

# total doses is monotonically increasing as a result of being a cumulative sum; finding daily dose values
covid_vacc['lagged_value'] = covid_vacc.groupby('State')['total_doses'].shift(1)
covid_vacc['lagged_value'] = covid_vacc['lagged_value'].fillna(0)
covid_vacc['total_doses_day'] = covid_vacc['total_doses'] - covid_vacc['lagged_value']
covid_vacc = covid_vacc[covid_vacc['total_doses_day']>=0] # this leads to some negative data which is erroneous (likely poor data collection); drop these rows (note: there is a pattern here as most of the negative values are on Mar 9, 2021, Feb 18, 2021, etc.)

print('\n')

# find the number of missing rows in covid_test data
print('covid_test missing rates')
for col in covid_test.columns:
    missing_rate = round(100*(covid_test[col].isna().sum())/len(covid_test), 2)
    print(col, ': ', missing_rate) # variable of interest = TotalSamples

# total testing samples is also monotonically increasing as a result of being a cumulative sum; finding daily testing values
covid_test = covid_test.sort_values(['State', 'Date'])
covid_test['lagged_value'] = covid_test.groupby('State')['TotalSamples'].shift(1)
covid_test['lagged_value'] = covid_test['lagged_value'].fillna(0)
covid_test['total_samples_day'] = covid_test['TotalSamples'] - covid_test['lagged_value']
covid_test = covid_test[covid_test['total_samples_day']>=0] # this leads to some negative data which is erroneous (likely poor data collection); drop these rows

# Drop dates before 2021 (vaccination rollout only began in 2021)
covid_vacc = covid_vacc[(covid_vacc['Date'] > '2020-12-31')]
covid_test = covid_test[(covid_test['Date'] > '2020-12-31')]

# Aggregate data to monthly level (instead of daily)
covid_vacc['Month'] = covid_vacc['Date'].dt.strftime('%m').astype(int) 
covid_test['Month'] = covid_test['Date'].dt.strftime('%m').astype(int)

# group data by state and month
covid_vacc_monthly = covid_vacc.sort_values('Date').groupby(['State', 'Month'])['total_doses_day'].sum().reset_index()
covid_test_monthly = covid_test.sort_values('Date').groupby(['State', 'Month'])['total_samples_day'].sum().reset_index()

# Merge datasets
covid_merged = pd.merge(covid_vacc_monthly, covid_test_monthly, on=['State', 'Month'], how='inner') # merge testing and vaccination data
covid_merged = pd.merge(covid_merged, population, on='State', how='inner') # add population data to merged file

# Calculate testing and vaccination rates
covid_merged['testing_rate'] = 100*(covid_merged['total_samples_day'] / covid_merged['Projected Total Population'])
covid_merged['vaccination_rate'] = 100*(covid_merged['total_doses_day'] / covid_merged['Projected Total Population'])

# check that the merged dataset has 36 states
print(covid_merged['State'].nunique())

# find missing state
for state in list(covid_vacc['State'].unique()):
    if state not in list(covid_test['State'].unique()):
        print('Missing state: ', state) # Dadra and Nagar Haveli and Daman and Diu
```

<br>

##### Data Exploration and Results

We examine the distribution of testing and vaccination rates across states using boxplots, as they capture variation across both space (states) and time (months) - each box represents how a state's testing or vaccination rate varied across our eight-month study period.

The testing rates boxplot shows most states tested between 2-10% of their population monthly, with some notable outliers. Lakshadweep, for instance, tested over 40% of its population in some months, likely due to its small, isolated island population.

The vaccination rates boxplot reveals most states vaccinated between 2-15% of their population monthly. Urban areas and states with stronger healthcare infrastructure (Delhi, Kerala, and Telangana) consistently achieved higher rates of 15-20%, while resource-constrained states like Bihar and Jharkhand managed only 2-3%. States that performed well in testing generally also achieved higher vaccination rates, suggesting underlying healthcare capacity influenced both outcomes.

```{python}
#| echo: false
alt.data_transformers.disable_max_rows()

# Distribution of testing rate by state
boxplot_test = alt.Chart(covid_merged).mark_boxplot().encode(
    x=alt.X('State:N', title='State', axis=alt.Axis(labelAngle=270)),
    y=alt.Y('testing_rate:Q', title='Testing Rate (%)')
).properties(
    title='Distribution of Testing Rates by State',
    width=600,
    height=200
)

boxplot_test.show()
#boxplot_test.save('/Users/tarini_dewan/Desktop/UChicago/Python_2/python2_final_project/boxplot_test.png', scale_factor=3)

# Distribution of vaccination rate by state
boxplot_vacc = alt.Chart(covid_merged).mark_boxplot().encode(
    x=alt.X('State:N', title='State', axis=alt.Axis(labelAngle=270)),
    y=alt.Y('vaccination_rate:Q', title='Vaccination Rate (%)')
).properties(
    title='Distribution of Vaccination Rates by State',
    width=600,
    height=200
)

boxplot_vacc.show()
#boxplot_vacc.save('/Users/tarini_dewan/Desktop/UChicago/Python_2/python2_final_project/boxplot_vacc.png', scale_factor=3)
```

Looking at aggregate trends, we found testing and vaccination rates across states generally moved in parallel, despite operating at different scales. This pattern was briefly interrupted around May 2021 due to a vaccine [supply shortage](https://www.google.com/url?q=https://carnegieendowment.org/posts/2021/05/what-is-happening-to-indias-covid-19-vaccine-program?lang%3Den&sa=D&source=editors&ust=1733558473293879&usg=AOvVaw0rkCmvkblw29twpwc_gU6j), but resumed once supplies were restored.

```{python}
#| echo: false
# covid testing (absolute) over months for all states combined
test_time = covid_merged.groupby('Month')['total_samples_day'].sum().reset_index()

line = alt.Chart(test_time).mark_line().encode(
    x=alt.X('Month:O', title='Month'),
    y=alt.Y('total_samples_day:Q', title='Testing')
).properties(
    title=' Covid Testing over Time (All States Combined)'
)

# vaccination administration (absolute) over months for all states combined
vacc_time = covid_merged.groupby('Month')['total_doses_day'].sum().reset_index()

line2 = alt.Chart(vacc_time).mark_line(color='orange').encode(
    x=alt.X('Month:O', title='Month'),
    y=alt.Y('total_doses_day:Q', title='Vaccination')
).properties(
    title='Covid Vaccination over Time (All States Combined)'
)

# adding a metric column to each dataset
test_time['Metric'] = 'Testing'
vacc_time['Metric'] = 'Vaccination'

# combining the two datasets
combined_time = pd.concat([test_time.rename(columns={'total_samples_day': 'Value'}),
    vacc_time.rename(columns={'total_doses_day': 'Value'})])
combined_time['Value'] = combined_time['Value']/1000000 # dividing by million

# creating a combined chart for testing and vaccination progression over time
combined_chart = alt.Chart(combined_time).mark_line().encode(
    x=alt.X('Month:O', title='Month'),
    y=alt.Y('Value:Q', title='Count (in millions)'),
    color=alt.Color('Metric:N', title='Metric')
).properties(
    title='Testing and Vaccination Over Time (All States Combined)',
    width=400,
    height=200
)

combined_chart.show()
#combined_chart.save('/Users/tarini_dewan/Desktop/UChicago/Python_2/python2_final_project/combined_line_chart.png', scale_factor=3)
```

We examined the relationship between testing and vaccination rates through two scatter plots that group states by healthcare infrastructure and development levels. Each point shows a state's monthly performance, with states colored by hospitals per capita in one plot and HDI categories in the other. In both plots, higher-performing states (blue dots) cluster toward the upper-right, indicating success in both testing and vaccination. This consistent pattern suggests that both physical healthcare infrastructure and broader socioeconomic development played important roles in determining states' COVID-19 response capacity.

We ran a regression model to examine how testing rates, HDI, and healthcare infrastructure affect vaccination rates, including interaction terms to understand how testing's impact varies with development levels. Our results show that higher testing rates and HDI scores are positively associated with vaccination rates. However, we found an unexpected negative relationship between number of hospitals and vaccination rates, suggesting that successful vaccination efforts might depend more on targeted campaigns than existing hospital infrastructure. Testing had a stronger effect on vaccination rates in states with lower HDI, indicating that expanding testing infrastructure could particularly benefit vaccination coverage in less developed states.

```{python}
#| echo: false

# plots

# testing vs vaccination by # of hospitals 

# adding hospital data as a proxy for infrastructure
hospital = pd.read_csv('data/Hospital_India.csv') # MODIFY PATH ACCORDINGLY

# rename columns and rows in the hospital dataset that use '&'
hospital = hospital.rename(columns={'State/UT/India': 'State'})
hospital = hospital.rename(columns={'No. of beds available in public facilities': 'num_beds'})
hospital['State'] = hospital['State'].replace('Andaman & Nicobar Islands', 'Andaman and Nicobar Islands').replace('Jammu & Kashmir', 'Jammu and Kashmir')

# merge this with our main covid_merged dataset
covid_merged = pd.merge(covid_merged, hospital, on='State', how='inner')

# change # of beds and # of hospitals variable to numeric
covid_merged['num_beds'] = pd.to_numeric(covid_merged['num_beds'], errors='coerce')
covid_merged['total_hosp'] = pd.to_numeric(covid_merged['Total'], errors='coerce')

# finding hospitals per capita for each state
covid_merged['hosp_per_capita'] = covid_merged['total_hosp']/covid_merged['Projected Total Population']

# categorizing states into low, medium, high hospitals per capita
covid_merged['Hospital_Category'] = pd.qcut(covid_merged['hosp_per_capita'], q=3, labels=['Low', 'Medium', 'High'])

# scatter plot of testing vs vaccination rate by # of hospitals
scatter_hosp = alt.Chart(covid_merged).mark_circle(size=60).encode(
    x=alt.X('testing_rate', 
            title='Testing Rate (%)',
            scale=alt.Scale(zero=True)),
    y=alt.Y('vaccination_rate', 
            title='Vaccination Rate (%)',
            scale=alt.Scale(zero=True)),
    color=alt.Color('Hospital_Category:N', legend=alt.Legend(orient='bottom'))
).properties(
    title='Testing vs Vaccination across States (hospital per capita)',
    width=350,
    height=225
)

#scatter_hosp.show()
#scatter_hosp.save('/Users/tarini_dewan/Desktop/UChicago/Python_2/python2_final_project/scatter_hosp.png', scale_factor=3)

# testing vs vaccination by HDI 

# load the HDI data
hdi = pd.read_csv('data/hdi_india_state.csv') # MODIFY PATH ACCORDINGLY

# create categories for HDI rank based on UNDP classifications; anything lower than India avg is low
hdi['HDI_Category'] = hdi['HDI'].apply(lambda x: 'High' if x>=0.7 else ('Medium' if x>0.644 else 'Low'))
hdi['State'] = hdi['State'].replace('Chhatisgarh', 'Chhattisgarh')

# merge HDI with merged data
covid_merged = pd.merge(covid_merged, hdi, on='State', how='inner')

# scatter plot of testing vs vaccination rate by HDI rank
scatter_hdi = alt.Chart(covid_merged).mark_circle(size=60).encode(
    x=alt.X('testing_rate', 
            title='Testing Rate (%)',
            scale=alt.Scale(zero=True)),
    y=alt.Y('vaccination_rate', 
            title='Vaccination Rate (%)',
            scale=alt.Scale(zero=True)),
    color=alt.Color('HDI_Category:N', legend=alt.Legend(orient='bottom'))
).properties(
    title='Testing vs Vaccination across States (HDI)',
    width=350,
    height=225
)

#scatter_hdi.show()

combined_plot = alt.hconcat(
    scatter_hosp, 
    scatter_hdi
)

combined_plot.show()
#scatter_hdi.save('/Users/tarini_dewan/Desktop/UChicago/Python_2/python2_final_project/scatter_hdi.png', scale_factor=3)
```

We developed an interactive Shiny dashboard to explore relationships between testing, vaccination, and healthcare infrastructure across Indian states. Users can compare any two states and choose between visualizations of testing, vaccination, and hospital bed relationships. A comparison of Delhi and Bihar shows how infrastructure gaps affected COVID-19 response. Delhi's healthcare capacity is five times that of Bihar, corresponding to stark differences in performance - Delhi achieved testing rates of 8-14% while Bihar managed only 1-4%. This suggests existing healthcare infrastructure influenced states' pandemic response capabilities.

![Shiny App](pictures/shiny_hosp.png){width=100%}

```{python}
#| include: false

# regression analysis

# simple linear regression model of vaccincation and testing rate including state fixed effects
model = ols('vaccination_rate ~ testing_rate + C(State)', data=covid_merged).fit() # with state fixed effects
#print(model.summary())

# main regression analysis with # of hospitals, HDI and interaction terms
model_main = ols('vaccination_rate ~ testing_rate + total_hosp + HDI + testing_rate:total_hosp + testing_rate:HDI', 
    data=covid_merged
).fit()
print(model_main.summary())

# Save the final dataset
covid_final = covid_merged.to_csv('data/covid_final.csv') # MODIFY PATH ACCORDINGLY
```

<br>

##### Discussion

While our analysis shows correlations rather than causal relationships, the findings have important policy implications. The strong link between testing and vaccination, especially in lower HDI states, indicates that investing in testing infrastructure could strengthen vaccine delivery systems. However, simply building more hospitals may not be the most effective strategy. Policymakers should consider targeted approaches like mobile vaccination units, community health centers, and local drives, particularly in areas with limited healthcare access. The influence of socioeconomic development on vaccination rates also shows that states should work on improving overall development indicators while building healthcare capacity.

Future research could examine how specific components of testing programs influence vaccination success, which types of targeted campaigns work best in different settings, and how states with limited infrastructure but successful vaccination programs achieved their results.